name: "bad-dockerfile CI workflow"


on:
  push:
    branches: [ test ]


jobs:

  ubuntu-latest-job:
    name: "docker vuln images  ubuntu latest"
    runs-on: ubuntu-latest
    env:
      distribution: "archlinux" #https://hub.docker.com/_/archlinux
      version: "latest"
      name: "archlinux/blackarch"
      dockerfilename: "Dockerfile.archlinux.blackarch"
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch   
    # https://github.com/ianmiell/bad-dockerfile
    - name: "docker pull bad bocker binary"
      run: |
        sudo docker pull imiell/bad-dockerfile
        docker image ls  
        docker inspect \
          -f '{{ index .Config.Labels "org.label-schema.description" }}' \
          imiell/bad-dockerfile
        # Query all the labels inside a built image
        docker inspect imiell/bad-dockerfile | jq -M '.[].Config.Labels'
    # https://github.com/ianmiell/bad-dockerfile
    - name: "docker build bad bocker source"
      run: |
        git clone https://github.com/ianmiell/bad-dockerfile
        cd bad-dockerfile && docker build -t bad-dockerfile . 
        docker image ls  
        docker inspect \
          -f '{{ index .Config.Labels "org.label-schema.description" }}' \
          imiell/bad-dockerfile
        # Query all the labels inside a built image
        docker inspect imiell/bad-dockerfile | jq -M '.[].Config.Labels'