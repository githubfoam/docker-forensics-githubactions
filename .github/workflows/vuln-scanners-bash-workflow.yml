name: "vuln scanners CI workflow"


on:
  push:
    branches: [ test ]


jobs:

  ubuntu-latest-w3af-job:
    name: "w3af ubuntu latest"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch
    # http://w3af.org/download
    - name: "Installing w3af"
      run: |
        git clone --depth 1 https://github.com/andresriancho/w3af.git && cd w3af 
        # https://dvwa.co.uk/
        grep "localhost" scripts/dvwa.w3af
        sed 's%localhost%dvwa.co.uk%g' scripts/dvwa.w3af
        grep "dvwa.co.uk" scripts/dvwa.w3af
        # ./w3af_console -s scripts/dvwa.w3af

  ubuntu-latest-wapiti-job:
    name: "wapiti ubuntu latest"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch
    # Installing Wapiti using a virtual environment
    # https://github.com/wapiti-scanner/wapiti/blob/master/INSTALL.md
    - name: "Installing Wapiti using a virtual environment"
      run: |
        python -m venv wapiti3
        # ./wapiti3/bin/activate #Permission denied 
        source ~wapiti3/bin/activate
        git clone https://github.com/wapiti-scanner/wapiti.git && cd wapiti
        python3 setup.py install
        # https://github.com/OWASP/OWASP-VWAD/blob/master/src/data/online.json
        # use the SQL, XSS and XXE modules when scanning the target.
        wapiti -u http://testphp.vulnweb.com -m sql,xss,xxe
        # the xss module will apply to requests submitted by the GET method
        wapiti -u http://testphp.vulnweb.com -m “xss: get, blindsql: post, xxe: post”
        #The wapiti-getcookie tool can be used to use authentication
        # use it to generate a cookie that Wapiti will use when scanning
        # At the output,file in JSON format
        wapiti-getcookie -u http://demo.testfire.net/login.jsp -c cookie.json
        # Another option is to add all the required information via the -d parameter
        wapiti-getcookie - http://demo.testfire.net/login.jsp  -c cookie.json -d "username=admin&password=admin&enter=submit"
        # -m – connect all modules – not recommended, because will affect testing time and report size
        # -c – use the cookie file generated by wapiti-getcookie
        # -scope – selection of a target for an attack. Selecting the folder option will scan and attack every URL starting from the base one. The base URL must have a forward slash (no filename)
        # -flush-session – allows you to re-scan, which will not take into account previous results
        # -A – own User-Agent
        # -p – proxy server address
        wapiti --level 1 -u http://demo.testfire.net -f html -o /tmp/vulns.html -m all --color -с cookie.json --scope folder --flush-session -A 'Wapiti Scans' -p http://myproxy:3128
        # -n: Define a limit of urls to read with the same pattern (prevent endless loops), here limit to 10.
        wapiti http://demo.testfire.net -n 10 -b folder -u -v 1 -f html -o /tmp/scan_report
        wapiti https://authlab.digi.ninja -u -n 5 -b domain -v 2 -o /tmp/outfile.html
        #  scan only for sql and blindsql attacks
        wapiti https://authlab.digi.ninja -u -n 5 -b domain -m "-all,sql,blindsql" -v 2 -o /tmp/outfile.html
        deactivate        
    - name: "Installing Wapiti using a virtual environment - pip"
      run: |
        python -m venv wapiti3
        ./wapiti3/bin/activate
        git clone https://github.com/wapiti-scanner/wapiti.git
        pip install wapiti3
        deactivate         
    - name: "Installing Wapiti without virtual environment"
      run: |
        git clone https://github.com/wapiti-scanner/wapiti.git
        python3 setup.py install
        deactivate
    - name: "Installing Wapiti without virtual environment - pip"
      run: |
        git clone https://github.com/wapiti-scanner/wapiti.git
        pip install wapiti3
        deactivate
